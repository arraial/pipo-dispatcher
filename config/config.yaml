telemetry:
  service: pipo.dispatch # match app name
  local: false
  log:
    level: INFO
    encoding: utf-8
    format: "%(asctime)s - %(levelname)s - %(name)s - %(message)s"
  metrics:
    service: pipo.dispatch # match app name
    endpoint: "/metrics"
probes:
  host: "0.0.0.0"
  port: 8080
  log_level: info
  liveness:
    timeout: 5
    status_code: 204
    endpoint: "/livez"
  readiness:
    timeout: 5
    endpoint: "/readyz"
# Application name
app: pipo.dispatch
player:
  queue:
    broker:
      host:
      vhost:
      port:
      timeout: 240
      graceful_timeout: 480     # TODO check if (mili)seconds
      max_consumers: 10
    service:
      parking_lot:
        queue: plq
        durable: true
      dead_letter:
        exchange:
          name: dlx
          durable: true
        queue:
          name: dlq
          routing_key: "dl.#"
          durable: true
          args:
            x-queue-type: quorum
            x-delivery-limit: 3
            x-dead-letter-exchange: plq # match service.parking_lot
            message-ttl: 86400000       # 24 hour
      dispatcher:
        queue: dispatcher
        args:
          x-dead-letter-exchange: dlx   # match service.dead_letter.exchange.name
          x-dead-letter-routing-key: "dl.dispatch"
          x-queue-type: quorum
          x-delivery-limit: 3
          message-ttl: 3600000  # 1 hour
      transmuter:
        exchange: providers
        routing_key: provider